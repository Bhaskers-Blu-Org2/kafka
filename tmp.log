Building project 'core' with Scala version 2.11.12
Pruning sources from previous analysis, due to incompatible CompileSetup.
D:\github\kafka\core\src\main\scala\kafka\api\OffsetCommitRequest.scala:78: value DEFAULT_TIMESTAMP in object OffsetCommitRequest is deprecated: see corresponding Javadoc for more information.
            org.apache.kafka.common.requests.OffsetCommitRequest.DEFAULT_TIMESTAMP
                                                                 ^
D:\github\kafka\core\src\main\scala\kafka\common\OffsetMetadataAndError.scala:36: value DEFAULT_TIMESTAMP in object OffsetCommitRequest is deprecated: see corresponding Javadoc for more information.
                             commitTimestamp: Long = org.apache.kafka.common.requests.OffsetCommitRequest.DEFAULT_TIMESTAMP,
                                                                                                          ^
D:\github\kafka\core\src\main\scala\kafka\common\OffsetMetadataAndError.scala:37: value DEFAULT_TIMESTAMP in object OffsetCommitRequest is deprecated: see corresponding Javadoc for more information.
                             expireTimestamp: Long = org.apache.kafka.common.requests.OffsetCommitRequest.DEFAULT_TIMESTAMP) {
                                                                                                          ^
D:\github\kafka\core\src\main\scala\kafka\coordinator\group\GroupMetadataManager.scala:666: value DEFAULT_TIMESTAMP in object OffsetCommitRequest is deprecated: see corresponding Javadoc for more information.
        if (offsetAndMetadata.expireTimestamp == org.apache.kafka.common.requests.OffsetCommitRequest.DEFAULT_TIMESTAMP)
                                                                                                      ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaConfig.scala:718: value SASL_ENABLED_MECHANISMS_DOC in object SaslConfigs is deprecated: see corresponding Javadoc for more information.
  val SaslEnabledMechanismsDoc = SaslConfigs.SASL_ENABLED_MECHANISMS_DOC
                                             ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:349: value DEFAULT_TIMESTAMP in object OffsetCommitRequest is deprecated: see corresponding Javadoc for more information.
              if (partitionData.timestamp == OffsetCommitRequest.DEFAULT_TIMESTAMP)
                                                                 ^
D:\github\kafka\core\src\main\scala\kafka\admin\AclCommand.scala:230: method fromString in object KafkaPrincipal is deprecated: see corresponding Javadoc for more information.
      opts.options.valuesOf(principalOptionSpec).asScala.map(s => KafkaPrincipal.fromString(s.trim)).toSet
                                                                                 ^
D:\github\kafka\core\src\main\scala\kafka\admin\AclCommand.scala:263: method readLine in class DeprecatedConsole is deprecated: Use the method in scala.io.StdIn
    Console.readLine().equalsIgnoreCase("y")
            ^
D:\github\kafka\core\src\main\scala\kafka\admin\AdminUtils.scala:64: trait AdminUtilities in package admin is deprecated: This class is deprecated and will be replaced by kafka.zk.AdminZkClient.
object AdminUtils extends Logging with AdminUtilities {
                                       ^
D:\github\kafka\core\src\main\scala\kafka\admin\ConsumerGroupCommand.scala:66: class ZkConsumerGroupService in object ConsumerGroupCommand is deprecated: This class has been deprecated and will be removed in a future release.
        new ZkConsumerGroupService(opts)
            ^
D:\github\kafka\core\src\main\scala\kafka\admin\TopicCommand.scala:88: class Whitelist in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
      val topicsFilter = new Whitelist(topicsSpec)
                             ^
D:\github\kafka\core\src\main\scala\kafka\admin\TopicCommand.scala:389: method readLine in class DeprecatedConsole is deprecated: Use the method in scala.io.StdIn
    if (!Console.readLine().equalsIgnoreCase("y")) {
                 ^
D:\github\kafka\core\src\main\scala\kafka\consumer\KafkaStream.scala:40: non-nullary method overrides nullary method
  def iterator: ConsumerIterator[K,V] = iter
      ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\FetchRequest.scala:49: object FetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  val underlying = kafka.api.FetchRequest(
                             ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\FetchResponse.scala:20: class FetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
class FetchResponse(private val underlying: kafka.api.FetchResponse) {
                                                      ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\GroupCoordinatorResponse.scala:23: class GroupCoordinatorResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
class GroupCoordinatorResponse(private val underlying: kafka.api.GroupCoordinatorResponse) {
                                                                 ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\GroupCoordinatorResponse.scala:49: object GroupCoordinatorResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def readFrom(buffer: ByteBuffer) = new GroupCoordinatorResponse(kafka.api.GroupCoordinatorResponse.readFrom(buffer))
                                                                            ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\Implicits.scala:28: class FetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  implicit def toJavaFetchResponse(response: kafka.api.FetchResponse): kafka.javaapi.FetchResponse =
                                                       ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\Implicits.scala:31: class TopicMetadataResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  implicit def toJavaTopicMetadataResponse(response: kafka.api.TopicMetadataResponse): kafka.javaapi.TopicMetadataResponse =
                                                               ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\Implicits.scala:34: class OffsetResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  implicit def toJavaOffsetResponse(response: kafka.api.OffsetResponse): kafka.javaapi.OffsetResponse =
                                                        ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\Implicits.scala:37: class OffsetFetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  implicit def toJavaOffsetFetchResponse(response: kafka.api.OffsetFetchResponse): kafka.javaapi.OffsetFetchResponse =
                                                             ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\Implicits.scala:40: class OffsetCommitResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  implicit def toJavaOffsetCommitResponse(response: kafka.api.OffsetCommitResponse): kafka.javaapi.OffsetCommitResponse =
                                                              ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\OffsetCommitRequest.scala:30: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    kafka.api.OffsetCommitRequest(
              ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\OffsetCommitResponse.scala:26: class OffsetCommitResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
class OffsetCommitResponse(private val underlying: kafka.api.OffsetCommitResponse) {
                                                             ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\OffsetCommitResponse.scala:38: object OffsetCommitResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def readFrom(buffer: ByteBuffer) = new OffsetCommitResponse(kafka.api.OffsetCommitResponse.readFrom(buffer))
                                                                        ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\OffsetFetchResponse.scala:25: class OffsetFetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
class OffsetFetchResponse(private val underlying: kafka.api.OffsetFetchResponse) {
                                                            ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\OffsetFetchResponse.scala:32: object OffsetFetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def readFrom(buffer: ByteBuffer) = new OffsetFetchResponse(kafka.api.OffsetFetchResponse.readFrom(buffer))
                                                                       ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\OffsetRequest.scala:31: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    kafka.api.OffsetRequest(
              ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\OffsetResponse.scala:22: class OffsetResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
class OffsetResponse(private val underlying: kafka.api.OffsetResponse) {
                                                       ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\TopicMetadataRequest.scala:32: class TopicMetadataRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  val underlying: kafka.api.TopicMetadataRequest = new kafka.api.TopicMetadataRequest(versionId, correlationId, clientId, topics.asScala)
                            ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\TopicMetadataRequest.scala:32: class TopicMetadataRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  val underlying: kafka.api.TopicMetadataRequest = new kafka.api.TopicMetadataRequest(versionId, correlationId, clientId, topics.asScala)
                                                                 ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\TopicMetadataRequest.scala:35: object TopicMetadataRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    this(kafka.api.TopicMetadataRequest.CurrentVersion, 0, kafka.api.TopicMetadataRequest.DefaultClientId, topics)
                   ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\TopicMetadataRequest.scala:35: object TopicMetadataRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    this(kafka.api.TopicMetadataRequest.CurrentVersion, 0, kafka.api.TopicMetadataRequest.DefaultClientId, topics)
                                                                     ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\TopicMetadataRequest.scala:38: object TopicMetadataRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    this(kafka.api.TopicMetadataRequest.CurrentVersion, correlationId, kafka.api.TopicMetadataRequest.DefaultClientId, topics)
                   ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\TopicMetadataRequest.scala:38: object TopicMetadataRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    this(kafka.api.TopicMetadataRequest.CurrentVersion, correlationId, kafka.api.TopicMetadataRequest.DefaultClientId, topics)
                                                                                 ^
D:\github\kafka\core\src\main\scala\kafka\javaapi\TopicMetadataResponse.scala:19: class TopicMetadataResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
class TopicMetadataResponse(private val underlying: kafka.api.TopicMetadataResponse) {
                                                              ^
D:\github\kafka\core\src\main\scala\kafka\network\SocketServer.scala:107: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
            Option(metrics.metric(metricName)).fold(0.0)(_.value)
                                                           ^
D:\github\kafka\core\src\main\scala\kafka\network\SocketServer.scala:533: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
        Option(metrics.metric(metrics.metricName("io-wait-ratio", "socket-server-metrics", metricTags))).fold(0.0)(_.value)
                                                                                                                     ^
D:\github\kafka\core\src\main\scala\kafka\security\SecurityUtils.scala:35: method fromString in object KafkaPrincipal is deprecated: see corresponding Javadoc for more information.
      principal <- Try(KafkaPrincipal.fromString(filter.entryFilter.principal))
                                      ^
D:\github\kafka\core\src\main\scala\kafka\server\ClientQuotaManager.scala:345: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    val difference = clientMetric.value() - quota.bound
                                  ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:349: value timestamp in class PartitionData is deprecated: see corresponding Javadoc for more information.
              if (partitionData.timestamp == OffsetCommitRequest.DEFAULT_TIMESTAMP)
                                ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:352: value timestamp in class PartitionData is deprecated: see corresponding Javadoc for more information.
                offsetRetention + partitionData.timestamp
                                                ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:690: method offsetData in class ListOffsetRequest is deprecated: see corresponding Javadoc for more information.
    val (authorizedRequestInfo, unauthorizedRequestInfo) = offsetRequest.offsetData.asScala.partition {
                                                                         ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:690: class PartitionData in object ListOffsetRequest is deprecated: see corresponding Javadoc for more information.
    val (authorizedRequestInfo, unauthorizedRequestInfo) = offsetRequest.offsetData.asScala.partition {
                                                                                                      ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:695: constructor PartitionData in class PartitionData is deprecated: see corresponding Javadoc for more information.
      new ListOffsetResponse.PartitionData(Errors.TOPIC_AUTHORIZATION_FAILED, List[JLong]().asJava)
      ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:720: constructor PartitionData in class PartitionData is deprecated: see corresponding Javadoc for more information.
        (topicPartition, new ListOffsetResponse.PartitionData(Errors.NONE, offsets.map(new JLong(_)).asJava))
                         ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:729: constructor PartitionData in class PartitionData is deprecated: see corresponding Javadoc for more information.
          (topicPartition, new ListOffsetResponse.PartitionData(Errors.forException(e), List[JLong]().asJava))
                           ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaApis.scala:732: constructor PartitionData in class PartitionData is deprecated: see corresponding Javadoc for more information.
          (topicPartition, new ListOffsetResponse.PartitionData(Errors.forException(e), List[JLong]().asJava))
                           ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaConfig.scala:125: object ConsumerConfig in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
  val ReplicaSocketTimeoutMs = ConsumerConfig.SocketTimeout
                               ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaConfig.scala:126: object ConsumerConfig in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
  val ReplicaSocketReceiveBufferBytes = ConsumerConfig.SocketBufferSize
                                        ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaConfig.scala:127: object ConsumerConfig in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
  val ReplicaFetchMaxBytes = ConsumerConfig.FetchSize
                             ^
D:\github\kafka\core\src\main\scala\kafka\server\KafkaConfig.scala:218: value DEFAULT_SASL_ENABLED_MECHANISMS in object SaslConfigs is deprecated: see corresponding Javadoc for more information.
  val SaslEnabledMechanisms = SaslConfigs.DEFAULT_SASL_ENABLED_MECHANISMS
                                          ^
D:\github\kafka\core\src\main\scala\kafka\server\ReplicaFetcherThread.scala:244: class PartitionData in object ListOffsetRequest is deprecated: see corresponding Javadoc for more information.
        val partitions = Map(topicPartition -> new ListOffsetRequest.PartitionData(earliestOrLatest, 1))
                                                                     ^
D:\github\kafka\core\src\main\scala\kafka\server\ReplicaFetcherThread.scala:255: value offsets in class PartitionData is deprecated: see corresponding Javadoc for more information.
          partitionData.offsets.get(0)
                        ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:72: class OldConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
        new OldConsumer(conf.filterSpec, props)
            ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:76: class NewShinyConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
          new NewShinyConsumer(Option(conf.topicArg), conf.partitionArg, Option(conf.offsetArg), None, getNewConsumerProps(conf), timeoutMs)
              ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:78: class NewShinyConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
          new NewShinyConsumer(Option(conf.topicArg), None, None, Option(conf.whitelistArg), getNewConsumerProps(conf), timeoutMs)
              ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:112: trait BaseConsumer in package consumer is deprecated: This trait has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
  def addShutdownHook(consumer: BaseConsumer, conf: ConsumerConfig) {
                                ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:126: trait BaseConsumer in package consumer is deprecated: This trait has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
  def process(maxMessages: Integer, formatter: MessageFormatter, consumer: BaseConsumer, output: PrintStream, skipMessageOnError: Boolean) {
                                                                           ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:128: class BaseConsumerRecord in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerRecord instead.
      val msg: BaseConsumerRecord = try {
               ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:196: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      val resetToBeginning = OffsetRequest.SmallestTimeString == props.getProperty(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG)
                             ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:231: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      (OffsetRequest.SmallestTimeString, OffsetRequest.LargestTimeString)
       ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:231: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      (OffsetRequest.SmallestTimeString, OffsetRequest.LargestTimeString)
                                         ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:360: class TopicFilter in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
    var filterSpec: TopicFilter = null
                    ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:397: class Blacklist in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
      filterSpec = if (options.has(blacklistOpt)) new Blacklist(topicArg) else new Whitelist(topicArg)
                                                      ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:397: class Whitelist in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
      filterSpec = if (options.has(blacklistOpt)) new Blacklist(topicArg) else new Whitelist(topicArg)
                                                                                   ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:426: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
          case "earliest" => OffsetRequest.EarliestTime
                             ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:427: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
          case "latest" => OffsetRequest.LatestTime
                           ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:438: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      else if (fromBeginning) OffsetRequest.EarliestTime
                              ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleConsumer.scala:439: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      else OffsetRequest.LatestTime
           ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleProducer.scala:47: class OldProducer in package producer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.producer.KafkaProducer instead.
            new OldProducer(getOldProducerProps(config))
                ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsoleProducer.scala:49: class NewShinyProducer in package producer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.producer.KafkaProducer instead.
            new NewShinyProducer(getNewProducerProps(config))
                ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsumerPerformance.scala:77: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
      val consumerConfig = new ConsumerConfig(config.props)
                               ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsumerPerformance.scala:78: trait ConsumerConnector in package consumer is deprecated: This trait has been deprecated and will be removed in a future release.
      val consumerConnector: ConsumerConnector = Consumer.create(consumerConfig)
                             ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsumerPerformance.scala:78: object Consumer in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.Consumer instead.
      val consumerConnector: ConsumerConnector = Consumer.create(consumerConfig)
                                                 ^
D:\github\kafka\core\src\main\scala\kafka\tools\ConsumerPerformance.scala:363: class KafkaStream in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.streams.KafkaStreams instead.
                           stream: KafkaStream[Array[Byte], Array[Byte]],
                                   ^
D:\github\kafka\core\src\main\scala\kafka\tools\GetOffsetShell.scala:72: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val metadataTargetBrokers = ClientUtils.parseBrokerList(brokerList)
                                ^
D:\github\kafka\core\src\main\scala\kafka\tools\GetOffsetShell.scala:79: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val topicsMetadata = ClientUtils.fetchTopicMetadata(Set(topic), metadataTargetBrokers, clientId, maxWaitMs).topicsMetadata
                         ^
D:\github\kafka\core\src\main\scala\kafka\tools\GetOffsetShell.scala:97: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
              val consumer = new SimpleConsumer(leader.host, leader.port, 10000, 100000, clientId)
                                 ^
D:\github\kafka\core\src\main\scala\kafka\tools\GetOffsetShell.scala:99: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
              val request = OffsetRequest(Map(topicAndPartition -> PartitionOffsetRequestInfo(time, nOffsets)))
                            ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:324: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
      val consumerConfig = new OldConsumerConfig(consumerConfigProps)
                               ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:325: class ZookeeperConsumerConnector in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
      new ZookeeperConsumerConnector(consumerConfig)
          ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:330: class Whitelist in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
      new Whitelist(whitelist.get)
          ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:332: class Blacklist in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
      new Blacklist(blacklist.get)
          ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:508: trait BaseConsumer in package consumer is deprecated: This trait has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
  private[kafka] trait MirrorMakerBaseConsumer extends BaseConsumer {
                                                       ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:516: class ZookeeperConsumerConnector in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
  private class MirrorMakerOldConsumer(connector: ZookeeperConsumerConnector,
                                                  ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:517: class TopicFilter in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
                                       filterSpec: TopicFilter) extends MirrorMakerBaseConsumer {
                                                   ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:518: class ConsumerIterator in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
    private var iter: ConsumerIterator[Array[Byte], Array[Byte]] = null
                      ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:559: class BaseConsumerRecord in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerRecord instead.
    override def receive() : BaseConsumerRecord = {
                             ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:634: class BaseConsumerRecord in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerRecord instead.
    override def receive() : BaseConsumerRecord = {
                             ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:643: class ConsumerTimeoutException in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.common.errors.TimeoutException instead.
          throw new ConsumerTimeoutException
                    ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:702: class ConsumerThreadId in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
                                        partitionAssignment: java.util.Map[String, java.util.Map[java.lang.Integer, ConsumerThreadId]]) {
                                                                       ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:756: class BaseConsumerRecord in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerRecord instead.
    def handle(record: BaseConsumerRecord): util.List[ProducerRecord[Array[Byte], Array[Byte]]]
                       ^
D:\github\kafka\core\src\main\scala\kafka\tools\MirrorMaker.scala:760: class BaseConsumerRecord in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerRecord instead.
    override def handle(record: BaseConsumerRecord): util.List[ProducerRecord[Array[Byte], Array[Byte]]] = {
                                ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplayLogProducer.scala:45: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    consumerProps.put("auto.offset.reset", OffsetRequest.SmallestTimeString)
                                           ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplayLogProducer.scala:48: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val consumerConfig = new ConsumerConfig(consumerProps)
                             ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplayLogProducer.scala:49: trait ConsumerConnector in package consumer is deprecated: This trait has been deprecated and will be removed in a future release.
    val consumerConnector: ConsumerConnector = Consumer.create(consumerConfig)
                           ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplayLogProducer.scala:49: object Consumer in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.Consumer instead.
    val consumerConnector: ConsumerConnector = Consumer.create(consumerConfig)
                                               ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplayLogProducer.scala:124: class KafkaStream in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.streams.KafkaStreams instead.
  class ZKConsumerThread(config: Config, stream: KafkaStream[Array[Byte], Array[Byte]]) extends Thread with Logging {
                                                 ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:77: object ConsumerConfig in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
                         .defaultsTo(ConsumerConfig.FetchSize)
                                     ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:106: class Whitelist in package consumer is deprecated: This class has been deprecated and will be removed in a future release.
    val topicWhiteListFiler = new Whitelist(regex)
                                  ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:124: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val metadataTargetBrokers = ClientUtils.parseBrokerList(brokerList)
                                ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:125: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val topicsMetadataResponse = ClientUtils.fetchTopicMetadata(Set[String](), metadataTargetBrokers, clientId, maxWaitMs)
                                 ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:237: class OffsetResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  private def offsetResponseStringWithError(offsetResponse: OffsetResponse): String = {
                                                            ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:246: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
      val consumer = new SimpleConsumer(broker.host, broker.port, 10000, 100000, ReplicaVerificationTool.clientId)
                         ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:249: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      val offsetRequest = OffsetRequest(initialOffsetMap)
                          ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:347: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
  val simpleConsumer = new SimpleConsumer(sourceBroker.host, sourceBroker.port, socketTimeout, socketBufferSize, ReplicaVerificationTool.clientId)
                           ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:348: class FetchRequestBuilder in package api is deprecated: This class has been deprecated and will be removed in a future release.
  val fetchRequestBuilder = new FetchRequestBuilder().
                                ^
D:\github\kafka\core\src\main\scala\kafka\tools\ReplicaVerificationTool.scala:366: class FetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    var response: FetchResponse = null
                  ^
D:\github\kafka\core\src\main\scala\kafka\utils\IteratorTemplate.scala:50: non-nullary method overrides nullary method
  def hasNext: Boolean = {
      ^
D:\github\kafka\core\src\main\scala\kafka\utils\ToolsUtils.scala:55: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
        (mergedKeyName, value.value())
                              ^
D:\github\kafka\core\src\main\scala\kafka\utils\json\DecodeJson.scala:50: constructor JsonMappingException in class JsonMappingException is deprecated: see corresponding Javadoc for more information.
        throw new JsonMappingException(x)
              ^
D:\github\kafka\core\src\main\scala\kafka\utils\json\JsonObject.scala:34: constructor JsonMappingException in class JsonMappingException is deprecated: see corresponding Javadoc for more information.
    get(name).getOrElse(throw new JsonMappingException(s"No such field exists: `$name`"))
                              ^
D:\github\kafka\core\src\main\scala\kafka\utils\json\JsonValue.scala:62: constructor JsonMappingException in class JsonMappingException is deprecated: see corresponding Javadoc for more information.
    asJsonObjectOption.getOrElse(throw new JsonMappingException(s"Expected JSON object, received $node"))
                                       ^
D:\github\kafka\core\src\main\scala\kafka\utils\json\JsonValue.scala:79: constructor JsonMappingException in class JsonMappingException is deprecated: see corresponding Javadoc for more information.
    asJsonArrayOption.getOrElse(throw new JsonMappingException(s"Expected JSON array, received $node"))
                                      ^
115 warnings found
warning: [options] bootstrap class path not set in conjunction with -source 1.7
Note: Some input files use or override a deprecated API.
Note: Recompile with -Xlint:deprecation for details.
Note: D:\github\kafka\core\src\main\scala\kafka\tools\StreamsResetter.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
1 warning
Pruning sources from previous analysis, due to incompatible CompileSetup.
D:\github\kafka\core\src\test\scala\unit\kafka\zookeeper\ZooKeeperClientTest.scala:376: reflective access of structural type member value calls should be enabled
by making the implicit value scala.language.reflectiveCalls visible.
This can be achieved by adding the import clause 'import scala.language.reflectiveCalls'
or by setting the compiler option -language:reflectiveCalls.
See the Scaladoc for value scala.language.reflectiveCalls for a discussion
why the feature should be explicitly enabled.
    assertEquals(1, goodHandler.calls.get)
                                ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseProducerSendTest.scala:116: method checksum in class RecordMetadata is deprecated: see corresponding Javadoc for more information.
          assertNotEquals(metadata.checksum(), 0)
                                   ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:86: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertTrue("Should have been throttled", producerThrottleMetric.value > 0)
                                                                    ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:92: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertTrue("Should have been throttled", consumerThrottleMetric.value > 0)
                                                                    ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:108: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertEquals("Should not have been throttled", 0.0, producerThrottleMetric.value, 0.0)
                                                                               ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:112: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertEquals("Should not have been throttled", 0.0, consumerThrottleMetric.value, 0.0)
                                                                               ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:123: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertEquals("Should not have been throttled", 0.0, producerThrottleMetric.value, 0.0)
                                                                               ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:125: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertEquals("Should not have been throttled", 0.0, consumerThrottleMetric.value, 0.0)
                                                                               ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:131: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertTrue("Should have been throttled", producerThrottleMetric.value > 0)
                                                                    ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:137: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertTrue("Should have been throttled", consumerThrottleMetric.value > 0)
                                                                    ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:153: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      throttled = throttleMetric != null && throttleMetric.value > 0
                                                           ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:160: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    assertTrue("Exempt requests not recorded", exemptRequestMetric.value > 0)
                                                                   ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:172: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      throttled = throttleMetric != null && throttleMetric.value > 0
                                                           ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:184: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      throttled = throttleMetric != null && throttleMetric.value > 0
                                                           ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:217: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
    TestUtils.waitUntilTrue(() => avgMetric.value > 0.0 && maxMetric.value > 0.0,
                                            ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:217: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
    TestUtils.waitUntilTrue(() => avgMetric.value > 0.0 && maxMetric.value > 0.0,
                                                                     ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:218: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
        s"Producer throttle metric not updated: avg=${avgMetric.value} max=${maxMetric.value}")
                                                                ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:218: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
        s"Producer throttle metric not updated: avg=${avgMetric.value} max=${maxMetric.value}")
                                                                                       ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:227: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
    TestUtils.waitUntilTrue(() => avgMetric.value > 0.0 && maxMetric.value > 0.0,
                                            ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:227: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
    TestUtils.waitUntilTrue(() => avgMetric.value > 0.0 && maxMetric.value > 0.0,
                                                                     ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:228: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
        s"Consumer throttle metric not updated: avg=${avgMetric.value} max=${maxMetric.value}")
                                                                ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:228: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
        s"Consumer throttle metric not updated: avg=${avgMetric.value} max=${maxMetric.value}")
                                                                                       ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:229: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
    maxThrottleTime.foreach(max => assertTrue(s"Maximum consumer throttle too high: ${maxMetric.value}", maxMetric.value <= max))
                                                                                                ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\BaseQuotaTest.scala:229: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
    maxThrottleTime.foreach(max => assertTrue(s"Maximum consumer throttle too high: ${maxMetric.value}", maxMetric.value <= max))
                                                                                                                   ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\MetricsTest.scala:271: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
      matchingMetrics.foldLeft(0.0)((max, metric) => Math.max(max, metric.value))
                                                                          ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\PlaintextConsumerTest.scala:1413: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
      assertEquals(s"The lag should be $expectedLag", expectedLag, fetchLag0.value, epsilon)
                                                                             ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\PlaintextConsumerTest.scala:1459: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
      assertEquals(s"The lag should be $expectedLag", expectedLag, fetchLag.value, epsilon)
                                                                            ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\PlaintextConsumerTest.scala:1496: method value in trait Metric is deprecated: see corresponding Javadoc for more information.
      assertEquals(s"The lag should be ${numMessages - records.count}", numMessages - records.count, lag.value, epsilon)
                                                                                                         ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\ProducerBounceTest.scala:105: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
      val consumer = new SimpleConsumer("localhost", boundPort(servers(leader)), 30000, 1024 * 1024, "")
                         ^
D:\github\kafka\core\src\test\scala\integration\kafka\api\ProducerBounceTest.scala:106: class FetchRequestBuilder in package api is deprecated: This class has been deprecated and will be removed in a future release.
      val response = consumer.fetch(new FetchRequestBuilder().addFetch(topic1, partition, 0, Int.MaxValue).build()).messageSet(topic1, partition)
                                        ^
D:\github\kafka\core\src\test\scala\kafka\tools\TestLogCleaning.scala:293: method makeConsumer in object TestLogCleaning is deprecated: This method has been deprecated and will be removed in a future release.
    val connector = makeConsumer(zkUrl, topics)
                    ^
D:\github\kafka\core\src\test\scala\other\kafka\ReplicationQuotasTestRig.scala:267: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
        broker.metrics.metrics.asScala(metricName).value
                                                   ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:74: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    private var offsetsChannel = ClientUtils.channelToOffsetManager(groupId, zkUtils, SocketTimeoutMs)
                                 ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:84: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
        offsetsChannel = ClientUtils.channelToOffsetManager(groupId, zkUtils, SocketTimeoutMs)
                         ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:88: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      val commitRequest = OffsetCommitRequest(groupId, immutable.Map((1 to partitionCount).map(TopicAndPartition("topic-" + id, _) -> OffsetAndMetadata(offset, metadata)):_*))
                          ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:94: object OffsetCommitResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
          val response = OffsetCommitResponse.readFrom(offsetsChannel.receive().payload())
                         ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:131: class BlockingChannel in package network is deprecated: This class has been deprecated and will be removed in a future release.
    private val channels = mutable.Map[Int, BlockingChannel]()
                                            ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:132: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    private var metadataChannel = ClientUtils.channelToAnyBroker(zkUtils, SocketTimeoutMs)
                                  ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:140: object GroupCoordinatorRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
        metadataChannel.send(GroupCoordinatorRequest(group))
                             ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:141: object GroupCoordinatorResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
        val coordinatorId = GroupCoordinatorResponse.readFrom(metadataChannel.receive().payload()).coordinatorOpt.map(_.id).getOrElse(-1)
                            ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:146: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
          val newChannel = ClientUtils.channelToOffsetManager(group, zkUtils, SocketTimeoutMs)
                           ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:153: object OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
          val fetchRequest = OffsetFetchRequest(group, Seq(TopicAndPartition("topic-"+id, 1)))
                             ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:157: object OffsetFetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
            val response = OffsetFetchResponse.readFrom(channel.receive().payload())
                           ^
D:\github\kafka\core\src\test\scala\other\kafka\TestOffsetManager.scala:178: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
          metadataChannel = ClientUtils.channelToAnyBroker(zkUtils, SocketTimeoutMs)
                            ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AclCommandTest.scala:31: method fromString in object KafkaPrincipal is deprecated: see corresponding Javadoc for more information.
  private val Users = Set(KafkaPrincipal.fromString("User:CN=writeuser,OU=Unknown,O=Unknown,L=Unknown,ST=Unknown,C=Unknown"),
                                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AclCommandTest.scala:32: method fromString in object KafkaPrincipal is deprecated: see corresponding Javadoc for more information.
    KafkaPrincipal.fromString("User:test2"),
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AclCommandTest.scala:33: method fromString in object KafkaPrincipal is deprecated: see corresponding Javadoc for more information.
    KafkaPrincipal.fromString("""User:CN=\#User with special chars in CN : (\, \+ \" \\ \< \> \; ')"""))
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AddPartitionsTest.scala:112: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val metadata = ClientUtils.fetchTopicMetadata(Set(topic1), brokers.map(_.brokerEndPoint(listenerName)),
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AddPartitionsTest.scala:140: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val metadata = ClientUtils.fetchTopicMetadata(Set(topic2),
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AddPartitionsTest.scala:166: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val metadata = ClientUtils.fetchTopicMetadata(Set(topic3),
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AddPartitionsTest.scala:189: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val metadata = ClientUtils.fetchTopicMetadata(Set(topic2),
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:94: method createOrUpdateTopicPartitionAssignmentPathInZK in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
      AdminUtils.createOrUpdateTopicPartitionAssignmentPathInZK(zkUtils, "test", Map(0->Seq(0,0)))
                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:99: method createOrUpdateTopicPartitionAssignmentPathInZK in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
      AdminUtils.createOrUpdateTopicPartitionAssignmentPathInZK(zkUtils, "test", Map(0->Seq(0,1), 1->Seq(0)))
                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:105: method createOrUpdateTopicPartitionAssignmentPathInZK in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
    AdminUtils.createOrUpdateTopicPartitionAssignmentPathInZK(zkUtils, "test", assignment)
               ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:143: method createOrUpdateTopicPartitionAssignmentPathInZK in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
    AdminUtils.createOrUpdateTopicPartitionAssignmentPathInZK(zkUtils, topic, expectedReplicaAssignment)
               ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:153: method createOrUpdateTopicPartitionAssignmentPathInZK in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
      AdminUtils.createOrUpdateTopicPartitionAssignmentPathInZK(zkUtils, topic, expectedReplicaAssignment)
                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:163: method createTopic in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
    AdminUtils.createTopic(zkUtils, topic, 3, 1)
               ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:167: method createTopic in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
      AdminUtils.createTopic(zkUtils, collidingTopic, 3, 1)
                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:182: method validateCreateOrUpdateTopic in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
      AdminUtils.validateCreateOrUpdateTopic(zkMock, topic, Map.empty, new Properties, update = false)
                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:536: method fetchAllEntityConfigs in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
    val configInZk: Map[String, Properties] = AdminUtils.fetchAllEntityConfigs(zkUtils, ConfigType.Client)
                                                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:555: method getBrokerMetadatas in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
    val processedMetadatas1 = AdminUtils.getBrokerMetadatas(zkUtils, RackAwareMode.Disabled)
                                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:559: method getBrokerMetadatas in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
    val processedMetadatas2 = AdminUtils.getBrokerMetadatas(zkUtils, RackAwareMode.Safe)
                                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:564: method getBrokerMetadatas in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
      AdminUtils.getBrokerMetadatas(zkUtils, RackAwareMode.Enforced)
                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:568: method getBrokerMetadatas in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
    val processedMetadatas3 = AdminUtils.getBrokerMetadatas(zkUtils, RackAwareMode.Enforced, Some(partialList))
                                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\AdminTest.scala:573: method createTopic in object AdminUtils is deprecated: This method is deprecated and will be replaced by kafka.zk.AdminZkClient.
    AdminUtils.createTopic(zkUtils, "foo", numPartitions, 2, rackAwareMode = RackAwareMode.Safe)
               ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\ConsumerGroupCommandTest.scala:44: class OldConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
  private val oldConsumers = new ArrayBuffer[OldConsumer]
                                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\ConsumerGroupCommandTest.scala:65: value oldConsumers in class ConsumerGroupCommandTest is deprecated: This field will be removed in a future release
    oldConsumers.foreach(_.stop())
    ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\ConsumerGroupCommandTest.scala:97: value oldConsumers in class ConsumerGroupCommandTest is deprecated: This field will be removed in a future release
    oldConsumers.head.stop()
    ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\ConsumerGroupCommandTest.scala:102: class ZkConsumerGroupService in object ConsumerGroupCommand is deprecated: This class has been deprecated and will be removed in a future release.
    val service = if (opts.useOldConsumer) new ZkConsumerGroupService(opts) else new KafkaConsumerGroupService(opts)
                                               ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\ListConsumerGroupTest.scala:43: class ZkConsumerGroupService in object ConsumerGroupCommand is deprecated: This class has been deprecated and will be removed in a future release.
    val consumerGroupCommand = new ZkConsumerGroupService(opts)
                                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\ListConsumerGroupTest.scala:64: class ZkConsumerGroupService in object ConsumerGroupCommand is deprecated: This class has been deprecated and will be removed in a future release.
    val consumerGroupCommand = new ZkConsumerGroupService(opts)
                                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\admin\TestAdminUtils.scala:22: trait AdminUtilities in package admin is deprecated: This class is deprecated and will be replaced by kafka.zk.AdminZkClient.
class TestAdminUtils extends AdminUtilities {
                             ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\FetchRequestTest.scala:31: object FetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val shuffled = FetchRequest.shuffle(seq)
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\FetchRequestTest.scala:50: object FetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val shuffled2 = FetchRequest.shuffle(seq)
                    ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\FetchRequestTest.scala:58: object FetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val shuffled = FetchRequest.shuffle(seq)
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:83: class ProducerRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestProducerRequest: ProducerRequest = {
                                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:84: class ProducerRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    new ProducerRequest(1, "client 1", 0, 1000, topicDataProducerRequest)
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:87: class ProducerResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestProducerResponse: ProducerResponse =
                                  ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:91: object ProducerRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    ), ProducerRequest.CurrentVersion, 100)
       ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:93: class FetchRequest in package api is deprecated: This class has been deprecated and will be removed in a future release.
  def createTestFetchRequest: FetchRequest = new FetchRequest(requestInfo = requestInfos.toVector)
                              ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:93: object FetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestFetchRequest: FetchRequest = new FetchRequest(requestInfo = requestInfos.toVector)
                                                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:95: class FetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestFetchResponse: FetchResponse = FetchResponse(1, topicDataFetchResponse.toVector)
                               ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:95: object FetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestFetchResponse: FetchResponse = FetchResponse(1, topicDataFetchResponse.toVector)
                                               ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:97: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestOffsetRequest = new OffsetRequest(
                                    ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:102: class OffsetResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestOffsetResponse: OffsetResponse = {
                                ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:103: class OffsetResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    new OffsetResponse(0, collection.immutable.Map(
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:108: class OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestOffsetCommitRequestV2: OffsetCommitRequest = {
                                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:109: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    new OffsetCommitRequest(
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:118: class OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestOffsetCommitRequestV1: OffsetCommitRequest = {
                                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:119: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    new OffsetCommitRequest(
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:128: class OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestOffsetCommitRequestV0: OffsetCommitRequest = {
                                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:129: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    new OffsetCommitRequest(
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:138: class OffsetCommitResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestOffsetCommitResponse: OffsetCommitResponse = {
                                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:139: class OffsetCommitResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    new OffsetCommitResponse(collection.immutable.Map(TopicAndPartition(topic1, 0) -> Errors.NONE,
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:143: class OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestOffsetFetchRequest: OffsetFetchRequest = {
                                    ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:144: class OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    new OffsetFetchRequest("group 1", Seq(
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:150: class OffsetFetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createTestOffsetFetchResponse: OffsetFetchResponse = {
                                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:151: object OffsetFetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    new OffsetFetchResponse(collection.immutable.Map(
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:157: class GroupCoordinatorRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createConsumerMetadataRequest: GroupCoordinatorRequest = GroupCoordinatorRequest("group 1", clientId = "client 1")
                                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:157: object GroupCoordinatorRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createConsumerMetadataRequest: GroupCoordinatorRequest = GroupCoordinatorRequest("group 1", clientId = "client 1")
                                                               ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:159: class GroupCoordinatorResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
  def createConsumerMetadataResponse: GroupCoordinatorResponse = {
                                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:206: object ProducerResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val oldClientResponse = ProducerResponse(1, Map(
                            ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:222: object ProducerResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    assertEquals(ProducerResponse.readFrom(buffer).throttleTime, 100)
                 ^
D:\github\kafka\core\src\test\scala\unit\kafka\api\RequestResponseSerializationTest.scala:227: object FetchResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val oldClientResponse = FetchResponse(1, Map(
                            ^
D:\github\kafka\core\src\test\scala\unit\kafka\common\ConfigTest.scala:69: object ConsumerConfig in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
        ConsumerConfig.validateGroupId(invalidGroupIds(i))
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\common\ConfigTest.scala:81: object ConsumerConfig in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
        ConsumerConfig.validateGroupId(validGroupIds(i))
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:64: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val topicsMetadata = ClientUtils.fetchTopicMetadata(Set(topic), brokerEndPoints, "TopicMetadataTest-testBasicTopicMetadata",
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:85: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val topicsMetadata = ClientUtils.fetchTopicMetadata(Set.empty, brokerEndPoints, "TopicMetadataTest-testGetAllTopicMetadata",
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:105: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    var topicsMetadata = ClientUtils.fetchTopicMetadata(Set(topic), brokerEndPoints, "TopicMetadataTest-testAutoCreateTopic",
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:117: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    topicsMetadata = ClientUtils.fetchTopicMetadata(Set(topic), brokerEndPoints, "TopicMetadataTest-testBasicTopicMetadata",
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:143: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    val topicsMetadata = ClientUtils.fetchTopicMetadata(Set(topic), Seq(adHocEndpoint), "TopicMetadataTest-testAutoCreateTopic",
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:156: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    var topicsMetadata = ClientUtils.fetchTopicMetadata(Set(topic1, topic2), brokerEndPoints, "TopicMetadataTest-testAutoCreateTopic",
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:169: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    topicsMetadata = ClientUtils.fetchTopicMetadata(Set(topic1), brokerEndPoints, "TopicMetadataTest-testBasicTopicMetadata",
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:190: class TopicMetadataResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
      var metadata: TopicMetadataResponse = new TopicMetadataResponse(Seq(), Seq(), -1)
                    ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:190: class TopicMetadataResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
      var metadata: TopicMetadataResponse = new TopicMetadataResponse(Seq(), Seq(), -1)
                                                ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:192: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
        metadata = ClientUtils.fetchTopicMetadata(Set.empty,
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:235: class TopicMetadataResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    var topicMetadata: TopicMetadataResponse = new TopicMetadataResponse(Seq(), Seq(), -1)
                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:235: class TopicMetadataResponse in package api is deprecated: This object has been deprecated and will be removed in a future release.
    var topicMetadata: TopicMetadataResponse = new TopicMetadataResponse(Seq(), Seq(), -1)
                                                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:240: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
    topicMetadata = ClientUtils.fetchTopicMetadata(
                    ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\TopicMetadataTest.scala:249: object ClientUtils in package client is deprecated: This class has been deprecated and will be removed in a future release.
          val foundMetadata = ClientUtils.fetchTopicMetadata(
                              ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\UncleanLeaderElectionTest.scala:278: object Consumer in package consumer is deprecated: This object has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.Consumer instead.
    val consumerConnector = Consumer.create(new ConsumerConfig(consumerProps))
                            ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\UncleanLeaderElectionTest.scala:278: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val consumerConnector = Consumer.create(new ConsumerConfig(consumerProps))
                                                ^
D:\github\kafka\core\src\test\scala\unit\kafka\integration\UncleanLeaderElectionTest.scala:281: method getMessages in object TestUtils is deprecated: This method has been deprecated and will be removed in a future release.
    val messages = getMessages(messageStream)
                   ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ClientQuotaManagerTest.scala:237: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      assertEquals(0, queueSizeMetric.value().toInt)
                                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ClientQuotaManagerTest.scala:247: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      assertEquals(1, queueSizeMetric.value().toInt)
                                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ClientQuotaManagerTest.scala:255: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      assertEquals(0, queueSizeMetric.value().toInt)
                                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ClientQuotaManagerTest.scala:287: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      assertEquals(0, queueSizeMetric.value().toInt)
                                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ClientQuotaManagerTest.scala:298: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      assertEquals(1, queueSizeMetric.value().toInt)
                                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ClientQuotaManagerTest.scala:306: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      assertEquals(0, queueSizeMetric.value().toInt)
                                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:44: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
  var simpleConsumer: SimpleConsumer = null
                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:56: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
    simpleConsumer = new SimpleConsumer("localhost", TestUtils.boundPort(server), 1000000, 64*1024, "")
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:70: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      Map(topicAndPartition -> PartitionOffsetRequestInfo(OffsetRequest.LatestTime, 10)))
                                                          ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:69: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val request = OffsetRequest(
                  ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:98: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val offsets = server.apis.fetchOffsets(logManager, new TopicPartition(topic, part), OffsetRequest.LatestTime, 15)
                                                                                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:104: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      Map(topicAndPartition -> PartitionOffsetRequestInfo(OffsetRequest.LatestTime, 15)),
                                                          ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:103: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val offsetRequest = OffsetRequest(
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:129: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val offsets = server.apis.fetchOffsets(logManager, new TopicPartition(topic, part), OffsetRequest.LatestTime, 15)
                                                                                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:135: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      Map(topicAndPartition -> PartitionOffsetRequestInfo(OffsetRequest.LatestTime, 15)),
                                                          ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:134: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val offsetRequest = OffsetRequest(
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:143: class FetchRequestBuilder in package api is deprecated: This class has been deprecated and will be removed in a future release.
      new FetchRequestBuilder().addFetch(topic, 0, consumerOffsets.head, 300 * 1024).build())
          ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:163: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
        OffsetRequest(Map(topicAndPartition -> PartitionOffsetRequestInfo(OffsetRequest.EarliestTime, 1)))
                                                                          ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:163: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
        OffsetRequest(Map(topicAndPartition -> PartitionOffsetRequestInfo(OffsetRequest.EarliestTime, 1)))
        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:197: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val offsetRequest = OffsetRequest(Map(topicAndPartition -> PartitionOffsetRequestInfo(now, 15)), replicaId = 0)
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:218: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val offsets = server.apis.fetchOffsets(logManager, new TopicPartition(topic, part), OffsetRequest.EarliestTime, 10)
                                                                                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:225: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      OffsetRequest(Map(topicAndPartition -> PartitionOffsetRequestInfo(OffsetRequest.EarliestTime, 10)))
                                                                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\LogOffsetTest.scala:225: object OffsetRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
      OffsetRequest(Map(topicAndPartition -> PartitionOffsetRequestInfo(OffsetRequest.EarliestTime, 10)))
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:44: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
  var simpleConsumer: SimpleConsumer = null
                      ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:55: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
    simpleConsumer = new SimpleConsumer("localhost", TestUtils.boundPort(server), 1000000, 64*1024, "test-client")
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:56: object GroupCoordinatorRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val consumerMetadataRequest = GroupCoordinatorRequest(group)
                                  ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:83: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest = OffsetCommitRequest(group, immutable.Map(topicAndPartition -> OffsetAndMetadata(offset = 42L)))
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:89: object OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val fetchRequest = OffsetFetchRequest(group, Seq(topicAndPartition))
                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:97: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest1 = OffsetCommitRequest(group, immutable.Map(topicAndPartition -> OffsetAndMetadata(
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:106: object OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val fetchRequest1 = OffsetFetchRequest(group, Seq(topicAndPartition))
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:115: object OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val fetchRequest2 = OffsetFetchRequest(group, Seq(unknownTopicAndPartition))
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:135: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest = OffsetCommitRequest("test-group", immutable.Map(
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:147: object OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val fetchRequest = OffsetFetchRequest(group, Seq(
                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:199: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest = OffsetCommitRequest("test-group", immutable.Map(topicAndPartition -> OffsetAndMetadata(
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:207: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest1 = OffsetCommitRequest(group, immutable.Map(topicAndPartition -> OffsetAndMetadata(
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:223: object OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val fetchRequest = OffsetFetchRequest(group, Seq(TopicAndPartition(topic, 0)))
                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:227: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest0 = OffsetCommitRequest(
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:236: object OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val offsetFetchReq = OffsetFetchRequest(group, Seq(TopicAndPartition(topic, 0)), versionId = 0)
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:243: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest1 = OffsetCommitRequest(
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:254: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest2 = OffsetCommitRequest(
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:265: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest3 = OffsetCommitRequest(
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:277: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest4 = OffsetCommitRequest(
                         ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:297: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest = OffsetCommitRequest(group, immutable.Map(
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:314: object OffsetCommitRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val commitRequest = OffsetCommitRequest(group, immutable.Map(topicPartition -> OffsetAndMetadata(offset = 42L)))
                        ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\OffsetCommitTest.scala:325: object OffsetFetchRequest in package api is deprecated: This object has been deprecated and will be removed in a future release.
    val fetchRequest = OffsetFetchRequest(group, Seq(TopicAndPartition(topic, 0)))
                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ReplicationQuotaManagerTest.scala:102: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    val leaderThrottledRate = metrics.metrics.asScala(metricName).value()
                                                                  ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ReplicationQuotasTest.scala:236: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
    broker.metrics.metrics.asScala(metricName).value
                                               ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\RequestQuotaTest.scala:162: method value in class KafkaMetric is deprecated: see corresponding Javadoc for more information.
      if (metric == null) -1.0 else metric.value
                                           ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ServerShutdownTest.scala:89: class SimpleConsumer in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.KafkaConsumer instead.
    val consumer = new SimpleConsumer(host, TestUtils.boundPort(server), 1000000, 64*1024, "")
                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ServerShutdownTest.scala:93: class FetchRequestBuilder in package api is deprecated: This class has been deprecated and will be removed in a future release.
      val fetched = consumer.fetch(new FetchRequestBuilder().addFetch(topic, 0, 0, 10000).maxWait(0).build())
                                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\server\ServerShutdownTest.scala:104: class FetchRequestBuilder in package api is deprecated: This class has been deprecated and will be removed in a future release.
      val fetched = consumer.fetch(new FetchRequestBuilder().addFetch(topic, 0, newOffset, 10000).build())
                                       ^
D:\github\kafka\core\src\test\scala\unit\kafka\tools\ConsoleConsumerTest.scala:39: class BaseConsumerRecord in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerRecord instead.
    val record = new BaseConsumerRecord(topic = "foo", partition = 1, offset = 1, key = Array[Byte](), value = Array[Byte]())
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\tools\ConsoleConsumerTest.scala:61: class BaseConsumerRecord in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerRecord instead.
    val record = new BaseConsumerRecord(topic = "foo", partition = 1, offset = 1, key = Array[Byte](), value = Array[Byte]())
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:69: side-effecting nullary methods are discouraged: suggest defining as `def testAsJsonObject()` instead
  def testAsJsonObject: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:77: side-effecting nullary methods are discouraged: suggest defining as `def testAsJsonObjectOption()` instead
  def testAsJsonObjectOption: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:84: side-effecting nullary methods are discouraged: suggest defining as `def testAsJsonArray()` instead
  def testAsJsonArray: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:92: side-effecting nullary methods are discouraged: suggest defining as `def testAsJsonArrayOption()` instead
  def testAsJsonArrayOption: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:99: side-effecting nullary methods are discouraged: suggest defining as `def testJsonObjectGet()` instead
  def testJsonObjectGet: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:106: side-effecting nullary methods are discouraged: suggest defining as `def testJsonObjectApply()` instead
  def testJsonObjectApply: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:113: side-effecting nullary methods are discouraged: suggest defining as `def testJsonObjectIterator()` instead
  def testJsonObjectIterator: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:121: side-effecting nullary methods are discouraged: suggest defining as `def testJsonArrayIterator()` instead
  def testJsonArrayIterator: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:126: side-effecting nullary methods are discouraged: suggest defining as `def testJsonValueEquals()` instead
  def testJsonValueEquals: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:142: side-effecting nullary methods are discouraged: suggest defining as `def testJsonValueHashCode()` instead
  def testJsonValueHashCode: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:147: side-effecting nullary methods are discouraged: suggest defining as `def testJsonValueToString()` instead
  def testJsonValueToString: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:153: side-effecting nullary methods are discouraged: suggest defining as `def testDecodeBoolean()` instead
  def testDecodeBoolean: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:159: side-effecting nullary methods are discouraged: suggest defining as `def testDecodeString()` instead
  def testDecodeString: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:167: side-effecting nullary methods are discouraged: suggest defining as `def testDecodeInt()` instead
  def testDecodeInt: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:173: side-effecting nullary methods are discouraged: suggest defining as `def testDecodeLong()` instead
  def testDecodeLong: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:180: side-effecting nullary methods are discouraged: suggest defining as `def testDecodeDouble()` instead
  def testDecodeDouble: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:188: side-effecting nullary methods are discouraged: suggest defining as `def testDecodeSeq()` instead
  def testDecodeSeq: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:196: side-effecting nullary methods are discouraged: suggest defining as `def testDecodeMap()` instead
  def testDecodeMap: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\utils\json\JsonValueTest.scala:204: side-effecting nullary methods are discouraged: suggest defining as `def testDecodeOption()` instead
  def testDecodeOption: Unit = {
      ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKEphemeralTest.scala:76: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnect, "test", "1"))
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKPathTest.scala:34: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnectWithInvalidRoot,
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKPathTest.scala:50: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnect, "test", "1"))
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKPathTest.scala:60: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnectWithInvalidRoot, "test", "1"))
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKPathTest.scala:74: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnect, "test", "1"))
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKPathTest.scala:84: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnectWithInvalidRoot, "test", "1"))
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKPathTest.scala:98: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnect, "test", "1"))
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKPathTest.scala:108: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnectWithInvalidRoot,
                     ^
D:\github\kafka\core\src\test\scala\unit\kafka\zk\ZKPathTest.scala:123: class ConsumerConfig in package consumer is deprecated: This class has been deprecated and will be removed in a future release. Please use org.apache.kafka.clients.consumer.ConsumerConfig instead.
    val config = new ConsumerConfig(TestUtils.createConsumerProperties(zkConnect, "test", "1"))
                     ^
204 warnings found

BUILD SUCCESSFUL in 3m 5s
64 actionable tasks: 64 executed
